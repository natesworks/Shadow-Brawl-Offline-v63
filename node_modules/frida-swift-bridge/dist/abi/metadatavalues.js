export const NumWords_ValueBuffer = 3;
const MetadataKindIsNonHeap = 0x200;
var TargetValueWitnessFlags_Values;
(function (TargetValueWitnessFlags_Values) {
    TargetValueWitnessFlags_Values[TargetValueWitnessFlags_Values["AlignmentMask"] = 255] = "AlignmentMask";
    TargetValueWitnessFlags_Values[TargetValueWitnessFlags_Values["IsNonPOD"] = 65536] = "IsNonPOD";
    TargetValueWitnessFlags_Values[TargetValueWitnessFlags_Values["IsNonInline"] = 131072] = "IsNonInline";
    TargetValueWitnessFlags_Values[TargetValueWitnessFlags_Values["HasSpareBits"] = 524288] = "HasSpareBits";
    TargetValueWitnessFlags_Values[TargetValueWitnessFlags_Values["IsNonBitwiseTakable"] = 1048576] = "IsNonBitwiseTakable";
    TargetValueWitnessFlags_Values[TargetValueWitnessFlags_Values["HasEnumWitnesses"] = 2097152] = "HasEnumWitnesses";
    TargetValueWitnessFlags_Values[TargetValueWitnessFlags_Values["Incomplete"] = 4194304] = "Incomplete";
})(TargetValueWitnessFlags_Values || (TargetValueWitnessFlags_Values = {}));
export class TargetValueWitnessFlags {
    data;
    constructor(data) {
        this.data = data;
    }
    get isInlineStorage() {
        return !(this.data & TargetValueWitnessFlags_Values.IsNonInline);
    }
    get isPOD() {
        return !(this.data & TargetValueWitnessFlags_Values.IsNonPOD);
    }
    get isBitwiseTakable() {
        return !(this.data & TargetValueWitnessFlags_Values.IsNonBitwiseTakable);
    }
    getAlignmentMask() {
        return this.data & TargetValueWitnessFlags_Values.AlignmentMask;
    }
}
export var MetadataKind;
(function (MetadataKind) {
    MetadataKind[MetadataKind["Class"] = 0] = "Class";
    MetadataKind[MetadataKind["Struct"] = 512] = "Struct";
    MetadataKind[MetadataKind["Enum"] = 513] = "Enum";
    MetadataKind[MetadataKind["LastEnumerated"] = 2047] = "LastEnumerated";
})(MetadataKind || (MetadataKind = {}));
export function getEnumeratedMetadataKind(kind) {
    if (kind > MetadataKind.LastEnumerated) {
        return MetadataKind.Class;
    }
    return kind;
}
export var ContextDescriptorKind;
(function (ContextDescriptorKind) {
    ContextDescriptorKind[ContextDescriptorKind["Module"] = 0] = "Module";
    ContextDescriptorKind[ContextDescriptorKind["Extension"] = 1] = "Extension";
    ContextDescriptorKind[ContextDescriptorKind["Anonymous"] = 2] = "Anonymous";
    ContextDescriptorKind[ContextDescriptorKind["Protocol"] = 3] = "Protocol";
    ContextDescriptorKind[ContextDescriptorKind["OpaqueType"] = 4] = "OpaqueType";
    ContextDescriptorKind[ContextDescriptorKind["TypeFirst"] = 16] = "TypeFirst";
    ContextDescriptorKind[ContextDescriptorKind["Class"] = 16] = "Class";
    ContextDescriptorKind[ContextDescriptorKind["Struct"] = 17] = "Struct";
    ContextDescriptorKind[ContextDescriptorKind["Enum"] = 18] = "Enum";
})(ContextDescriptorKind || (ContextDescriptorKind = {}));
var TypeContextDescriptorFlags_Values;
(function (TypeContextDescriptorFlags_Values) {
    TypeContextDescriptorFlags_Values[TypeContextDescriptorFlags_Values["MetadataInitialization"] = 0] = "MetadataInitialization";
    TypeContextDescriptorFlags_Values[TypeContextDescriptorFlags_Values["MetadataInitialization_width"] = 2] = "MetadataInitialization_width";
    TypeContextDescriptorFlags_Values[TypeContextDescriptorFlags_Values["Class_ResilientSuperclassReferenceKind"] = 9] = "Class_ResilientSuperclassReferenceKind";
    TypeContextDescriptorFlags_Values[TypeContextDescriptorFlags_Values["Class_HasResilientSuperclass"] = 13] = "Class_HasResilientSuperclass";
    TypeContextDescriptorFlags_Values[TypeContextDescriptorFlags_Values["Class_HasOverrideTable"] = 14] = "Class_HasOverrideTable";
    TypeContextDescriptorFlags_Values[TypeContextDescriptorFlags_Values["Class_HasVTable"] = 15] = "Class_HasVTable";
})(TypeContextDescriptorFlags_Values || (TypeContextDescriptorFlags_Values = {}));
var MetadataInitializationKind;
(function (MetadataInitializationKind) {
    MetadataInitializationKind[MetadataInitializationKind["NoMetadataInitialization"] = 0] = "NoMetadataInitialization";
    MetadataInitializationKind[MetadataInitializationKind["SingletonMetadataInitialization"] = 1] = "SingletonMetadataInitialization";
    MetadataInitializationKind[MetadataInitializationKind["ForeignMetadataInitialization"] = 2] = "ForeignMetadataInitialization";
})(MetadataInitializationKind || (MetadataInitializationKind = {}));
export class TypeContextDescriptorFlags {
    value;
    constructor(value) {
        this.value = value;
    }
    class_hasVTable() {
        return !!(this.value &
            (1 << TypeContextDescriptorFlags_Values.Class_HasVTable));
    }
    class_hasResilientSuperClass() {
        return !!(this.value &
            (1 <<
                TypeContextDescriptorFlags_Values.Class_HasResilientSuperclass));
    }
    class_hasOverrideTable() {
        return !!(this.value &
            (1 << TypeContextDescriptorFlags_Values.Class_HasOverrideTable));
    }
    getMetadataInitialization() {
        return getField(this.value, TypeContextDescriptorFlags_Values.MetadataInitialization, TypeContextDescriptorFlags_Values.MetadataInitialization_width);
    }
    hasSingletonMetadataInitialization() {
        return (this.getMetadataInitialization() ===
            MetadataInitializationKind.SingletonMetadataInitialization);
    }
    hasForeignMetadataInitialization() {
        return (this.getMetadataInitialization() ===
            MetadataInitializationKind.ForeignMetadataInitialization);
    }
}
function getField(bits, firstBit, width) {
    return (bits >>> firstBit) & ~(~0 << width);
}
export var MethodDescriptorKind;
(function (MethodDescriptorKind) {
    MethodDescriptorKind[MethodDescriptorKind["Method"] = 0] = "Method";
    MethodDescriptorKind[MethodDescriptorKind["Init"] = 1] = "Init";
    MethodDescriptorKind[MethodDescriptorKind["Getter"] = 2] = "Getter";
    MethodDescriptorKind[MethodDescriptorKind["Setter"] = 3] = "Setter";
    MethodDescriptorKind[MethodDescriptorKind["ModifyCoroutine"] = 4] = "ModifyCoroutine";
    MethodDescriptorKind[MethodDescriptorKind["ReadCoroutine"] = 5] = "ReadCoroutine";
})(MethodDescriptorKind || (MethodDescriptorKind = {}));
export class MethodDescriptorFlags {
    value;
    static KindMask = 0x0f;
    constructor(value) {
        this.value = value;
    }
    getKind() {
        return this.value & MethodDescriptorFlags.KindMask;
    }
}
export var TypeReferenceKind;
(function (TypeReferenceKind) {
    TypeReferenceKind[TypeReferenceKind["DirectTypeDescriptor"] = 0] = "DirectTypeDescriptor";
    TypeReferenceKind[TypeReferenceKind["IndirectTypeDescriptor"] = 1] = "IndirectTypeDescriptor";
    TypeReferenceKind[TypeReferenceKind["DirectObjCClassName"] = 2] = "DirectObjCClassName";
    TypeReferenceKind[TypeReferenceKind["IndirectObjCClass"] = 3] = "IndirectObjCClass";
})(TypeReferenceKind || (TypeReferenceKind = {}));
var ConformanceFlags_Value;
(function (ConformanceFlags_Value) {
    ConformanceFlags_Value[ConformanceFlags_Value["TypeMetadataKindMask"] = 56] = "TypeMetadataKindMask";
    ConformanceFlags_Value[ConformanceFlags_Value["TypeMetadataKindShift"] = 3] = "TypeMetadataKindShift";
})(ConformanceFlags_Value || (ConformanceFlags_Value = {}));
export class ConformanceFlags {
    value;
    constructor(value) {
        this.value = value;
    }
    getTypeReferenceKind() {
        return ((this.value & ConformanceFlags_Value.TypeMetadataKindMask) >>
            ConformanceFlags_Value.TypeMetadataKindShift);
    }
}
export class ProtocolClassConstraint {
    static Class = false;
    static Any = true;
}
var ProtocolContextDescriptorFlags_Values;
(function (ProtocolContextDescriptorFlags_Values) {
    ProtocolContextDescriptorFlags_Values[ProtocolContextDescriptorFlags_Values["HasClassConstratint"] = 0] = "HasClassConstratint";
    ProtocolContextDescriptorFlags_Values[ProtocolContextDescriptorFlags_Values["HasClassConstratint_width"] = 1] = "HasClassConstratint_width";
})(ProtocolContextDescriptorFlags_Values || (ProtocolContextDescriptorFlags_Values = {}));
export class ProtocolContextDescriptorFlags {
    bits;
    constructor(bits) {
        this.bits = bits;
    }
    getClassConstraint() {
        return !!(this.bits &
            (1 << ProtocolContextDescriptorFlags_Values.HasClassConstratint));
    }
}
