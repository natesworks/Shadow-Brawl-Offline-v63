/**
 * TODO:
 * 	- Handle PAC pointers
 */
export class RelativeDirectPointer {
    handle;
    offset;
    static sizeOf = 4;
    static From(handle) {
        const offset = handle.readS32();
        return offset === 0 ? null : new RelativeDirectPointer(handle, offset);
    }
    constructor(handle, offset) {
        this.handle = handle;
        this.offset = offset;
    }
    get() {
        return this.handle.add(this.offset);
    }
}
export class RelativeIndirectablePointer {
    handle;
    offset;
    static From(handle) {
        const offset = handle.readS32();
        return offset === 0
            ? null
            : new RelativeIndirectablePointer(handle, offset);
    }
    constructor(handle, offset) {
        this.handle = handle;
        this.offset = offset;
    }
    get() {
        const address = this.handle.add(this.offset & ~1);
        if (this.offset & 1) {
            return address.readPointer();
        }
        else {
            return address;
        }
    }
}
