import { RuntimeInstance } from "./types.js";
type SwiftInvocationArguments = RuntimeInstance[];
type SwiftInvocationReturnValue = RuntimeInstance;
interface SwiftScriptInvocationListenerCallbacks {
    onEnter?: (this: InvocationContext, args: SwiftInvocationArguments) => void;
    onLeave?: (this: InvocationContext, retval: SwiftInvocationReturnValue) => void;
}
export declare namespace SwiftInterceptor {
    function attach(target: NativePointer, callbacks: SwiftScriptInvocationListenerCallbacks): InvocationListener;
}
export {};
