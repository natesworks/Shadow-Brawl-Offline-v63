declare class Runtime {
    regs: RegsView;
    bootrom: MemoryView;
    cram: MemoryView;
    bram: MemoryView;
    mem25bitram: MemoryView;
    a3000lram: MemoryView;
    a3000hram: MemoryView;
}
declare class RegsView {
    get d0(): number;
    get d1(): number;
    get d2(): number;
    get d3(): number;
    get d4(): number;
    get d5(): number;
    get d6(): number;
    get d7(): number;
    get a0(): number;
    get a1(): number;
    get a2(): number;
    get a3(): number;
    get a4(): number;
    get a5(): number;
    get a6(): number;
    get a7(): number;
    get pc(): number;
    get pcPtr(): NativePointer;
}
declare class MemoryView {
    #private;
    constructor(id: MemoryId);
    get base(): NativePointer;
    get size(): number;
    get data(): ArrayBuffer;
}
declare const _default: Runtime;
export default _default;
type MemoryId = keyof MemoryGetters;
interface MemoryGetters {
    bootrom: NativePointer;
    cram: NativePointer;
    bram: NativePointer;
    mem25bitram: NativePointer;
    a3000lram: NativePointer;
    a3000hram: NativePointer;
}
