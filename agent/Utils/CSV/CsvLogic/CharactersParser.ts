class CharactersParser {
    static Data: any[] = [];

    static Init(csvData: any[]) {
        CharactersParser.Data = csvData;
    }
    static GetName() { return CharactersParser.Data.map(row => row['Name']); }
    static GetLockedforchronos() { return CharactersParser.Data.map(row => row['LockedForChronos']); }
    static GetDisabled() { return CharactersParser.Data.map(row => row['Disabled']); }
    static GetItemname() { return CharactersParser.Data.map(row => row['ItemName']); }
    static GetWeaponskill() { return CharactersParser.Data.map(row => row['WeaponSkill']); }
    static GetUltimateskill() { return CharactersParser.Data.map(row => row['UltimateSkill']); }
    static GetOverchargedultimateskill() { return CharactersParser.Data.map(row => row['OverchargedUltimateSkill']); }
    static GetPet() { return CharactersParser.Data.map(row => row['Pet']); }
    static GetAltpet() { return CharactersParser.Data.map(row => row['AltPet']); }
    static GetMovementtype() { return CharactersParser.Data.map(row => row['MovementType']); }
    static GetSpeed() { return CharactersParser.Data.map(row => row['Speed']); }
    static GetHitpoints() { return CharactersParser.Data.map(row => row['Hitpoints']); }
    static GetTraits() { return CharactersParser.Data.map(row => row['Traits']); }
    static GetComponents() { return CharactersParser.Data.map(row => row['Components']); }
    static GetHealthpromillelostpersecond() { return CharactersParser.Data.map(row => row['HealthPromilleLostPerSecond']); }
    static GetHealpercentchange() { return CharactersParser.Data.map(row => row['HealPercentChange']); }
    static GetLifetimeticks() { return CharactersParser.Data.map(row => row['LifeTimeTicks']); }
    static GetSkipdeploy() { return CharactersParser.Data.map(row => row['SkipDeploy']); }
    static GetMeleeautoattacksplashdamage() { return CharactersParser.Data.map(row => row['MeleeAutoAttackSplashDamage']); }
    static GetDelayticksfirstattack() { return CharactersParser.Data.map(row => row['DelayTicksFirstAttack']); }
    static GetAutoattackspeedms() { return CharactersParser.Data.map(row => row['AutoAttackSpeedMs']); }
    static GetAutoattackdamage() { return CharactersParser.Data.map(row => row['AutoAttackDamage']); }
    static GetAutoattackbulletspershot() { return CharactersParser.Data.map(row => row['AutoAttackBulletsPerShot']); }
    static GetAutoattackmode() { return CharactersParser.Data.map(row => row['AutoAttackMode']); }
    static GetAutoattackticksbetweenburstshots() { return CharactersParser.Data.map(row => row['AutoAttackTicksBetweenBurstShots']); }
    static GetAutoattackprojectilespread() { return CharactersParser.Data.map(row => row['AutoAttackProjectileSpread']); }
    static GetAutoattackprojectile() { return CharactersParser.Data.map(row => row['AutoAttackProjectile']); }
    static GetOverchargedautoattackprojectile() { return CharactersParser.Data.map(row => row['OverchargedAutoAttackProjectile']); }
    static GetAutoattackrange() { return CharactersParser.Data.map(row => row['AutoAttackRange']); }
    static GetRegeneratepersecond() { return CharactersParser.Data.map(row => row['RegeneratePerSecond']); }
    static GetLowprioritytarget() { return CharactersParser.Data.map(row => row['LowPriorityTarget']); }
    static GetUltiuses() { return CharactersParser.Data.map(row => row['UltiUses']); }
    static GetUltichargeinitial() { return CharactersParser.Data.map(row => row['UltiChargeInitial']); }
    static GetUltichargemul() { return CharactersParser.Data.map(row => row['UltiChargeMul']); }
    static GetUltichargeultimul() { return CharactersParser.Data.map(row => row['UltiChargeUltiMul']); }
    static GetOverchargechargemul() { return CharactersParser.Data.map(row => row['OverchargeChargeMul']); }
    static GetOverchargepassivechargemul() { return CharactersParser.Data.map(row => row['OverchargePassiveChargeMul']); }
    static GetOverchargechargeactivemul() { return CharactersParser.Data.map(row => row['OverchargeChargeActiveMul']); }
    static GetOverchargedamagepercent() { return CharactersParser.Data.map(row => row['OverchargeDamagePercent']); }
    static GetOverchargespeedpercent() { return CharactersParser.Data.map(row => row['OverchargeSpeedPercent']); }
    static GetOverchargeshieldpercent() { return CharactersParser.Data.map(row => row['OverchargeShieldPercent']); }
    static GetType() { return CharactersParser.Data.map(row => row['Type']); }
    static GetIsneutral() { return CharactersParser.Data.map(row => row['IsNeutral']); }
    static GetIsbosspet() { return CharactersParser.Data.map(row => row['IsBossPet']); }
    static GetCarryabletype() { return CharactersParser.Data.map(row => row['CarryableType']); }
    static GetDefaultskin() { return CharactersParser.Data.map(row => row['DefaultSkin']); }
    static GetMastery() { return CharactersParser.Data.map(row => row['Mastery']); }
    static GetManualrotations() { return CharactersParser.Data.map(row => row['ManualRotations']); }
    static GetFilename() { return CharactersParser.Data.map(row => row['FileName']); }
    static GetBlueexportname() { return CharactersParser.Data.map(row => row['BlueExportName']); }
    static GetRedexportname() { return CharactersParser.Data.map(row => row['RedExportName']); }
    static GetShadowexportname() { return CharactersParser.Data.map(row => row['ShadowExportName']); }
    static GetOverchargedeffect() { return CharactersParser.Data.map(row => row['OverchargedEffect']); }
    static GetOverchargedusedefaultskin() { return CharactersParser.Data.map(row => row['OverchargedUseDefaultSkin']); }
    static GetStatuseffect() { return CharactersParser.Data.map(row => row['StatusEffect']); }
    static GetAreaeffect() { return CharactersParser.Data.map(row => row['AreaEffect']); }
    static GetDeathareaeffect() { return CharactersParser.Data.map(row => row['DeathAreaEffect']); }
    static GetDeathoverchargedareaeffect() { return CharactersParser.Data.map(row => row['DeathOverchargedAreaEffect']); }
    static GetTakedamageeffect() { return CharactersParser.Data.map(row => row['TakeDamageEffect']); }
    static GetKilleffect() { return CharactersParser.Data.map(row => row['KillEffect']); }
    static GetDeatheffect() { return CharactersParser.Data.map(row => row['DeathEffect']); }
    static GetDeatheffectovercharged() { return CharactersParser.Data.map(row => row['DeathEffectOvercharged']); }
    static GetAllowdeatheffectoverride() { return CharactersParser.Data.map(row => row['AllowDeathEffectOverride']); }
    static GetMoveeffect() { return CharactersParser.Data.map(row => row['MoveEffect']); }
    static GetReloadeffect() { return CharactersParser.Data.map(row => row['ReloadEffect']); }
    static GetOutofammoeffect() { return CharactersParser.Data.map(row => row['OutOfAmmoEffect']); }
    static GetDryfireeffect() { return CharactersParser.Data.map(row => row['DryFireEffect']); }
    static GetSpawneffect() { return CharactersParser.Data.map(row => row['SpawnEffect']); }
    static GetOverchargedspawneffect() { return CharactersParser.Data.map(row => row['OverchargedSpawnEffect']); }
    static GetMeleehiteffect() { return CharactersParser.Data.map(row => row['MeleeHitEffect']); }
    static GetAutoattackstarteffect() { return CharactersParser.Data.map(row => row['AutoAttackStartEffect']); }
    static GetBoneeffect1() { return CharactersParser.Data.map(row => row['BoneEffect1']); }
    static GetBoneeffectuse1() { return CharactersParser.Data.map(row => row['BoneEffectUse1']); }
    static GetBoneeffect2() { return CharactersParser.Data.map(row => row['BoneEffect2']); }
    static GetBoneeffectuse2() { return CharactersParser.Data.map(row => row['BoneEffectUse2']); }
    static GetBoneeffect3() { return CharactersParser.Data.map(row => row['BoneEffect3']); }
    static GetBoneeffectuse3() { return CharactersParser.Data.map(row => row['BoneEffectUse3']); }
    static GetBoneeffect4() { return CharactersParser.Data.map(row => row['BoneEffect4']); }
    static GetBoneeffectuse4() { return CharactersParser.Data.map(row => row['BoneEffectUse4']); }
    static GetBoneeffect5() { return CharactersParser.Data.map(row => row['BoneEffect5']); }
    static GetBoneeffectuse5() { return CharactersParser.Data.map(row => row['BoneEffectUse5']); }
    static GetBoneeffect6() { return CharactersParser.Data.map(row => row['BoneEffect6']); }
    static GetBoneeffectuse6() { return CharactersParser.Data.map(row => row['BoneEffectUse6']); }
    static GetLoopedeffect() { return CharactersParser.Data.map(row => row['LoopedEffect']); }
    static GetLoopedeffect2() { return CharactersParser.Data.map(row => row['LoopedEffect2']); }
    static GetKillcelebrationsoundvo() { return CharactersParser.Data.map(row => row['KillCelebrationSoundVO']); }
    static GetInleadcelebrationsoundvo() { return CharactersParser.Data.map(row => row['InLeadCelebrationSoundVO']); }
    static GetStartsoundvo() { return CharactersParser.Data.map(row => row['StartSoundVO']); }
    static GetUseultisoundvo() { return CharactersParser.Data.map(row => row['UseUltiSoundVO']); }
    static GetTakedamagesoundvo() { return CharactersParser.Data.map(row => row['TakeDamageSoundVO']); }
    static GetDeathsoundvo() { return CharactersParser.Data.map(row => row['DeathSoundVO']); }
    static GetAttacksoundvo() { return CharactersParser.Data.map(row => row['AttackSoundVO']); }
    static GetUnlockvo() { return CharactersParser.Data.map(row => row['UnlockVO']); }
    static GetUnlockvoindex() { return CharactersParser.Data.map(row => row['UnlockVOIndex']); }
    static GetAttackstarteffectoffset() { return CharactersParser.Data.map(row => row['AttackStartEffectOffset']); }
    static GetTwoweaponattackeffectoffset() { return CharactersParser.Data.map(row => row['TwoWeaponAttackEffectOffset']); }
    static GetShadowscalex() { return CharactersParser.Data.map(row => row['ShadowScaleX']); }
    static GetShadowscaley() { return CharactersParser.Data.map(row => row['ShadowScaleY']); }
    static GetShadowx() { return CharactersParser.Data.map(row => row['ShadowX']); }
    static GetShadowy() { return CharactersParser.Data.map(row => row['ShadowY']); }
    static GetShadowskew() { return CharactersParser.Data.map(row => row['ShadowSkew']); }
    static GetScale() { return CharactersParser.Data.map(row => row['Scale']); }
    static GetHeroscreenscale() { return CharactersParser.Data.map(row => row['HeroScreenScale']); }
    static GetFittoboxscale() { return CharactersParser.Data.map(row => row['FitToBoxScale']); }
    static GetEndscreenscale() { return CharactersParser.Data.map(row => row['EndScreenScale']); }
    static GetGatchascreenscale() { return CharactersParser.Data.map(row => row['GatchaScreenScale']); }
    static GetHomescreenscale() { return CharactersParser.Data.map(row => row['HomeScreenScale']); }
    static GetBattleintroscale() { return CharactersParser.Data.map(row => row['BattleIntroScale']); }
    static GetShowpetinheroscreen() { return CharactersParser.Data.map(row => row['ShowPetInHeroScreen']); }
    static GetAlwaysshowwithpet() { return CharactersParser.Data.map(row => row['AlwaysShowWithPet']); }
    static GetHeroscreenxoffset() { return CharactersParser.Data.map(row => row['HeroScreenXOffset']); }
    static GetHeroscreenzoffset() { return CharactersParser.Data.map(row => row['HeroScreenZOffset']); }
    static GetBattleintroxoffset() { return CharactersParser.Data.map(row => row['BattleIntroXOffset']); }
    static GetBattleintrozoffset() { return CharactersParser.Data.map(row => row['BattleIntroZOffset']); }
    static GetHeroscreenemotex() { return CharactersParser.Data.map(row => row['HeroScreenEmoteX']); }
    static GetHeroscreenemotey() { return CharactersParser.Data.map(row => row['HeroScreenEmoteY']); }
    static GetCollisionradius() { return CharactersParser.Data.map(row => row['CollisionRadius']); }
    static GetHealthbar() { return CharactersParser.Data.map(row => row['HealthBar']); }
    static GetHealthbaroffsety() { return CharactersParser.Data.map(row => row['HealthBarOffsetY']); }
    static GetFloorindicatorscale() { return CharactersParser.Data.map(row => row['FloorIndicatorScale']); }
    static GetHealthbarscale() { return CharactersParser.Data.map(row => row['HealthBarScale']); }
    static GetFlyingheight() { return CharactersParser.Data.map(row => row['FlyingHeight']); }
    static GetProjectilestartz() { return CharactersParser.Data.map(row => row['ProjectileStartZ']); }
    static GetStopmovementafterms() { return CharactersParser.Data.map(row => row['StopMovementAfterMS']); }
    static GetWaitms() { return CharactersParser.Data.map(row => row['WaitMS']); }
    static GetTid() { return CharactersParser.Data.map(row => row['TID']); }
    static GetClassarchetype() { return CharactersParser.Data.map(row => row['ClassArchetype']); }
    static GetForceattackanimationtoend() { return CharactersParser.Data.map(row => row['ForceAttackAnimationToEnd']); }
    static GetIconswf() { return CharactersParser.Data.map(row => row['IconSWF']); }
    static GetIconexportname() { return CharactersParser.Data.map(row => row['IconExportName']); }
    static GetEmblemexportname() { return CharactersParser.Data.map(row => row['EmblemExportName']); }
    static GetRecoilamount() { return CharactersParser.Data.map(row => row['RecoilAmount']); }
    static GetFootstepclip() { return CharactersParser.Data.map(row => row['FootstepClip']); }
    static GetDifferentfootstepoffset() { return CharactersParser.Data.map(row => row['DifferentFootstepOffset']); }
    static GetFootstepintervalms() { return CharactersParser.Data.map(row => row['FootstepIntervalMS']); }
    static GetAttackingweaponscale() { return CharactersParser.Data.map(row => row['AttackingWeaponScale']); }
    static GetUsethrowingleftweaponbonescaling() { return CharactersParser.Data.map(row => row['UseThrowingLeftWeaponBoneScaling']); }
    static GetUsethrowingrightweaponbonescaling() { return CharactersParser.Data.map(row => row['UseThrowingRightWeaponBoneScaling']); }
    static GetCommonsetupgradebonus() { return CharactersParser.Data.map(row => row['CommonSetUpgradeBonus']); }
    static GetRaresetupgradebonus() { return CharactersParser.Data.map(row => row['RareSetUpgradeBonus']); }
    static GetSuperraresetupgradebonus() { return CharactersParser.Data.map(row => row['SuperRareSetUpgradeBonus']); }
    static GetCanwalkoverwater() { return CharactersParser.Data.map(row => row['CanWalkOverWater']); }
    static GetWaterfootstepeffect() { return CharactersParser.Data.map(row => row['WaterFootstepEffect']); }
    static GetUsecolormod() { return CharactersParser.Data.map(row => row['UseColorMod']); }
    static GetRedadd() { return CharactersParser.Data.map(row => row['RedAdd']); }
    static GetGreenadd() { return CharactersParser.Data.map(row => row['GreenAdd']); }
    static GetBlueadd() { return CharactersParser.Data.map(row => row['BlueAdd']); }
    static GetRedmul() { return CharactersParser.Data.map(row => row['RedMul']); }
    static GetGreenmul() { return CharactersParser.Data.map(row => row['GreenMul']); }
    static GetBluemul() { return CharactersParser.Data.map(row => row['BlueMul']); }
    static GetChargeultiautomatically() { return CharactersParser.Data.map(row => row['ChargeUltiAutomatically']); }
    static GetChargeultifromdamage() { return CharactersParser.Data.map(row => row['ChargeUltiFromDamage']); }
    static GetChargeultifromhealing() { return CharactersParser.Data.map(row => row['ChargeUltiFromHealing']); }
    static GetVideolink() { return CharactersParser.Data.map(row => row['VideoLink']); }
    static GetShouldencodepetstatus() { return CharactersParser.Data.map(row => row['ShouldEncodePetStatus']); }
    static GetSecondarypet() { return CharactersParser.Data.map(row => row['SecondaryPet']); }
    static GetIsexternalpet() { return CharactersParser.Data.map(row => row['IsExternalPet']); }
    static GetExtraminions() { return CharactersParser.Data.map(row => row['ExtraMinions']); }
    static GetPetautospawndelay() { return CharactersParser.Data.map(row => row['PetAutoSpawnDelay']); }
    static GetPetspawncount() { return CharactersParser.Data.map(row => row['PetSpawnCount']); }
    static GetPowerlevelstype() { return CharactersParser.Data.map(row => row['PowerLevelsType']); }
    static GetPowerlevelsspeedbuff() { return CharactersParser.Data.map(row => row['PowerLevelsSpeedBuff']); }
    static GetOffenserating() { return CharactersParser.Data.map(row => row['OffenseRating']); }
    static GetDefenserating() { return CharactersParser.Data.map(row => row['DefenseRating']); }
    static GetUtilityrating() { return CharactersParser.Data.map(row => row['UtilityRating']); }
    static GetShowhealinbattleend() { return CharactersParser.Data.map(row => row['ShowHealInBattleEnd']); }
    static GetOrbitingradius() { return CharactersParser.Data.map(row => row['OrbitingRadius']); }
    static GetOrbitingangularspeed() { return CharactersParser.Data.map(row => row['OrbitingAngularSpeed']); }
    static GetUniqueproperty() { return CharactersParser.Data.map(row => row['UniqueProperty']); }
    static GetUniquepropertyvalue1() { return CharactersParser.Data.map(row => row['UniquePropertyValue1']); }
    static GetUniquepropertyvalue2() { return CharactersParser.Data.map(row => row['UniquePropertyValue2']); }
    static GetArenaoverridemaxhpbuff() { return CharactersParser.Data.map(row => row['ArenaOverrideMaxHpBuff']); }
    static GetArenaoverridedmgbuff() { return CharactersParser.Data.map(row => row['ArenaOverrideDmgBuff']); }
    static GetArenaoverridespeedbuff() { return CharactersParser.Data.map(row => row['ArenaOverrideSpeedBuff']); }
    static GetArenaoverridereloadbuff() { return CharactersParser.Data.map(row => row['ArenaOverrideReloadBuff']); }
    static GetPetrotatable() { return CharactersParser.Data.map(row => row['PetRotatable']); }
    static GetHypermoveeffect() { return CharactersParser.Data.map(row => row['HyperMoveEffect']); }
    static GetHumanoidspecies() { return CharactersParser.Data.map(row => row['HumanoidSpecies']); }
}

export default CharactersParser;
