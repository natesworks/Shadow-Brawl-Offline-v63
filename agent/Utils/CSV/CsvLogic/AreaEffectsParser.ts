class AreaEffectsParser {
    static Data: any[] = [];

    static Init(csvData: any[]) {
        AreaEffectsParser.Data = csvData;
    }
    static GetName() { return AreaEffectsParser.Data.map(row => row['Name']); }
    static GetParentareaeffectforskin() { return AreaEffectsParser.Data.map(row => row['ParentAreaEffectForSkin']); }
    static GetDisabled() { return AreaEffectsParser.Data.map(row => row['Disabled']); }
    static GetFilename() { return AreaEffectsParser.Data.map(row => row['FileName']); }
    static GetOwnexportname() { return AreaEffectsParser.Data.map(row => row['OwnExportName']); }
    static GetBlueexportname() { return AreaEffectsParser.Data.map(row => row['BlueExportName']); }
    static GetRedexportname() { return AreaEffectsParser.Data.map(row => row['RedExportName']); }
    static GetNeutralexportname() { return AreaEffectsParser.Data.map(row => row['NeutralExportName']); }
    static GetLayer() { return AreaEffectsParser.Data.map(row => row['Layer']); }
    static GetExportnametop() { return AreaEffectsParser.Data.map(row => row['ExportNameTop']); }
    static GetExportnametopred() { return AreaEffectsParser.Data.map(row => row['ExportNameTopRed']); }
    static GetExportnameobject() { return AreaEffectsParser.Data.map(row => row['ExportNameObject']); }
    static GetEffect() { return AreaEffectsParser.Data.map(row => row['Effect']); }
    static GetLoopingeffect() { return AreaEffectsParser.Data.map(row => row['LoopingEffect']); }
    static GetScaleloopingeffect() { return AreaEffectsParser.Data.map(row => row['ScaleLoopingEffect']); }
    static GetHiteffect() { return AreaEffectsParser.Data.map(row => row['HitEffect']); }
    static GetAlloweffectinterrupt() { return AreaEffectsParser.Data.map(row => row['AllowEffectInterrupt']); }
    static GetPlaybacktype() { return AreaEffectsParser.Data.map(row => row['PlaybackType']); }
    static GetRotationtype() { return AreaEffectsParser.Data.map(row => row['RotationType']); }
    static GetScale() { return AreaEffectsParser.Data.map(row => row['Scale']); }
    static GetTimems() { return AreaEffectsParser.Data.map(row => row['TimeMs']); }
    static GetMintimems() { return AreaEffectsParser.Data.map(row => row['MinTimeMs']); }
    static GetRadius() { return AreaEffectsParser.Data.map(row => row['Radius']); }
    static GetDamage() { return AreaEffectsParser.Data.map(row => row['Damage']); }
    static GetDontoverridedmg() { return AreaEffectsParser.Data.map(row => row['DontOverrideDmg']); }
    static GetDamagescaletype() { return AreaEffectsParser.Data.map(row => row['DamageScaleType']); }
    static GetCustomvalue() { return AreaEffectsParser.Data.map(row => row['CustomValue']); }
    static GetCustomvalue2() { return AreaEffectsParser.Data.map(row => row['CustomValue2']); }
    static GetType() { return AreaEffectsParser.Data.map(row => row['Type']); }
    static GetStatuseffectself() { return AreaEffectsParser.Data.map(row => row['StatusEffectSelf']); }
    static GetStatuseffectally() { return AreaEffectsParser.Data.map(row => row['StatusEffectAlly']); }
    static GetStatuseffectenemy() { return AreaEffectsParser.Data.map(row => row['StatusEffectEnemy']); }
    static GetStatuseffecttickinterval() { return AreaEffectsParser.Data.map(row => row['StatusEffectTickInterval']); }
    static GetDelayfirsttick() { return AreaEffectsParser.Data.map(row => row['DelayFirstTick']); }
    static GetIspersonal() { return AreaEffectsParser.Data.map(row => row['IsPersonal']); }
    static GetTargetenemiesonly() { return AreaEffectsParser.Data.map(row => row['TargetEnemiesOnly']); }
    static GetBulletexplosionbullet() { return AreaEffectsParser.Data.map(row => row['BulletExplosionBullet']); }
    static GetBulletexplosionbulletdistance() { return AreaEffectsParser.Data.map(row => row['BulletExplosionBulletDistance']); }
    static GetBulletexplosionbulletoffset() { return AreaEffectsParser.Data.map(row => row['BulletExplosionBulletOffset']); }
    static GetBulletexplosionitem() { return AreaEffectsParser.Data.map(row => row['BulletExplosionItem']); }
    static GetExpandondistance() { return AreaEffectsParser.Data.map(row => row['ExpandOnDistance']); }
    static GetBulletangleoffset() { return AreaEffectsParser.Data.map(row => row['BulletAngleOffset']); }
    static GetBulletapplyangle() { return AreaEffectsParser.Data.map(row => row['BulletApplyAngle']); }
    static GetDestroysenvironment() { return AreaEffectsParser.Data.map(row => row['DestroysEnvironment']); }
    static GetDestroysdecorations() { return AreaEffectsParser.Data.map(row => row['DestroysDecorations']); }
    static GetDestroysonlybushes() { return AreaEffectsParser.Data.map(row => row['DestroysOnlyBushes']); }
    static GetPushbackstrength() { return AreaEffectsParser.Data.map(row => row['PushbackStrength']); }
    static GetPushbackstrengthself() { return AreaEffectsParser.Data.map(row => row['PushbackStrengthSelf']); }
    static GetPushbackdeadzone() { return AreaEffectsParser.Data.map(row => row['PushbackDeadzone']); }
    static GetCanstopgrapple() { return AreaEffectsParser.Data.map(row => row['CanStopGrapple']); }
    static GetStunticks() { return AreaEffectsParser.Data.map(row => row['StunTicks']); }
    static GetSlowstrength() { return AreaEffectsParser.Data.map(row => row['SlowStrength']); }
    static GetFreezeticks() { return AreaEffectsParser.Data.map(row => row['FreezeTicks']); }
    static GetIgnorefadeout() { return AreaEffectsParser.Data.map(row => row['IgnoreFadeout']); }
    static GetShouldshowevenifoutsidescreen() { return AreaEffectsParser.Data.map(row => row['ShouldShowEvenIfOutsideScreen']); }
    static GetSameareaeffectcannotdamagems() { return AreaEffectsParser.Data.map(row => row['SameAreaEffectCanNotDamageMs']); }
    static GetRelatedimmunityareas() { return AreaEffectsParser.Data.map(row => row['RelatedImmunityAreas']); }
    static GetDontshowtoenemy() { return AreaEffectsParser.Data.map(row => row['DontShowToEnemy']); }
    static GetRequirelineofsight() { return AreaEffectsParser.Data.map(row => row['RequireLineOfSight']); }
    static GetChainareaeffect() { return AreaEffectsParser.Data.map(row => row['ChainAreaEffect']); }
    static GetChainareaeffect2() { return AreaEffectsParser.Data.map(row => row['ChainAreaEffect2']); }
    static GetChainareaeffect3() { return AreaEffectsParser.Data.map(row => row['ChainAreaEffect3']); }
    static GetOverchargedchainareaeffect() { return AreaEffectsParser.Data.map(row => row['OverchargedChainAreaEffect']); }
    static GetOverchargedchainareaeffect2() { return AreaEffectsParser.Data.map(row => row['OverchargedChainAreaEffect2']); }
    static GetOverchargedchainareaeffect3() { return AreaEffectsParser.Data.map(row => row['OverchargedChainAreaEffect3']); }
    static GetSkinnedcustomvalue() { return AreaEffectsParser.Data.map(row => row['SkinnedCustomValue']); }
    static GetSpawnitem() { return AreaEffectsParser.Data.map(row => row['SpawnItem']); }
    static GetSnaptotile() { return AreaEffectsParser.Data.map(row => row['SnapToTile']); }
    static GetDamagescaledistancenear() { return AreaEffectsParser.Data.map(row => row['DamageScaleDistanceNear']); }
    static GetDamagescaledistancefar() { return AreaEffectsParser.Data.map(row => row['DamageScaleDistanceFar']); }
    static GetSourcetype() { return AreaEffectsParser.Data.map(row => row['SourceType']); }
    static GetOverhealticks() { return AreaEffectsParser.Data.map(row => row['OverHealTicks']); }
    static GetStackoverheal() { return AreaEffectsParser.Data.map(row => row['StackOverHeal']); }
    static GetMaxoverheal() { return AreaEffectsParser.Data.map(row => row['MaxOverHeal']); }
    static GetOverhealmultiplier() { return AreaEffectsParser.Data.map(row => row['OverHealMultiplier']); }
    static GetAffectonlyheroes() { return AreaEffectsParser.Data.map(row => row['AffectOnlyHeroes']); }
    static GetAffectprojectiles() { return AreaEffectsParser.Data.map(row => row['AffectProjectiles']); }
    static GetIgnorecharacters() { return AreaEffectsParser.Data.map(row => row['IgnoreCharacters']); }
    static GetInnerradius() { return AreaEffectsParser.Data.map(row => row['InnerRadius']); }
    static GetInnerradiusdamagepercent() { return AreaEffectsParser.Data.map(row => row['InnerRadiusDamagePercent']); }
    static GetExpiretypes() { return AreaEffectsParser.Data.map(row => row['ExpireTypes']); }
    static GetCurveball() { return AreaEffectsParser.Data.map(row => row['CurveBall']); }
    static GetCurveballadddistance() { return AreaEffectsParser.Data.map(row => row['CurveBallAddDistance']); }
}

export default AreaEffectsParser;
