class SkillsParser {
    static Data: any[] = [];

    static Init(csvData: any[]) {
        SkillsParser.Data = csvData;
    }
    static GetName() { return SkillsParser.Data.map(row => row['Name']); }
    static GetBehaviortype() { return SkillsParser.Data.map(row => row['BehaviorType']); }
    static GetEquiptype() { return SkillsParser.Data.map(row => row['EquipType']); }
    static GetCanmoveatsametime() { return SkillsParser.Data.map(row => row['CanMoveAtSameTime']); }
    static GetTargeted() { return SkillsParser.Data.map(row => row['Targeted']); }
    static GetAutoattacktargetingtype() { return SkillsParser.Data.map(row => row['AutoAttackTargetingType']); }
    static GetAttackfacing() { return SkillsParser.Data.map(row => row['AttackFacing']); }
    static GetCooldown() { return SkillsParser.Data.map(row => row['Cooldown']); }
    static GetBonusskillcooldown() { return SkillsParser.Data.map(row => row['BonusSkillCooldown']); }
    static GetActivetime() { return SkillsParser.Data.map(row => row['ActiveTime']); }
    static GetCastingtime() { return SkillsParser.Data.map(row => row['CastingTime']); }
    static GetCastingrange() { return SkillsParser.Data.map(row => row['CastingRange']); }
    static GetRangevisual() { return SkillsParser.Data.map(row => row['RangeVisual']); }
    static GetRangeinputscale() { return SkillsParser.Data.map(row => row['RangeInputScale']); }
    static GetMaxcastingrange() { return SkillsParser.Data.map(row => row['MaxCastingRange']); }
    static GetAllowaimoutsidemap() { return SkillsParser.Data.map(row => row['AllowAimOutsideMap']); }
    static GetForcevalidtile() { return SkillsParser.Data.map(row => row['ForceValidTile']); }
    static GetRechargetime() { return SkillsParser.Data.map(row => row['RechargeTime']); }
    static GetMaxcharge() { return SkillsParser.Data.map(row => row['MaxCharge']); }
    static GetDamage() { return SkillsParser.Data.map(row => row['Damage']); }
    static GetPercentdamage() { return SkillsParser.Data.map(row => row['PercentDamage']); }
    static GetMsbetweenattacks() { return SkillsParser.Data.map(row => row['MsBetweenAttacks']); }
    static GetSpread() { return SkillsParser.Data.map(row => row['Spread']); }
    static GetAttackpattern() { return SkillsParser.Data.map(row => row['AttackPattern']); }
    static GetNumbulletsinoneattack() { return SkillsParser.Data.map(row => row['NumBulletsInOneAttack']); }
    static GetTwoguns() { return SkillsParser.Data.map(row => row['TwoGuns']); }
    static GetExecutefirstattackimmediately() { return SkillsParser.Data.map(row => row['ExecuteFirstAttackImmediately']); }
    static GetMovementspeed() { return SkillsParser.Data.map(row => row['MovementSpeed']); }
    static GetChargepushback() { return SkillsParser.Data.map(row => row['ChargePushback']); }
    static GetOverchargedchargepushback() { return SkillsParser.Data.map(row => row['OverchargedChargePushback']); }
    static GetChargespeed() { return SkillsParser.Data.map(row => row['ChargeSpeed']); }
    static GetChargetype() { return SkillsParser.Data.map(row => row['ChargeType']); }
    static GetNumspawns() { return SkillsParser.Data.map(row => row['NumSpawns']); }
    static GetMaxspawns() { return SkillsParser.Data.map(row => row['MaxSpawns']); }
    static GetBreakinvisibilityonattack() { return SkillsParser.Data.map(row => row['BreakInvisibilityOnAttack']); }
    static GetSeeinvisibilitydistance() { return SkillsParser.Data.map(row => row['SeeInvisibilityDistance']); }
    static GetAlwayscastatmaxrange() { return SkillsParser.Data.map(row => row['AlwaysCastAtMaxRange']); }
    static GetRestrictcastonskillactive() { return SkillsParser.Data.map(row => row['RestrictCastOnSkillActive']); }
    static GetMeleeattackpiercesenvironment() { return SkillsParser.Data.map(row => row['MeleeAttackPiercesEnvironment']); }
    static GetProjectiles() { return SkillsParser.Data.map(row => row['Projectiles']); }
    static GetOverchargedprojectiles() { return SkillsParser.Data.map(row => row['OverchargedProjectiles']); }
    static GetOverchargedchainprojectile() { return SkillsParser.Data.map(row => row['OverchargedChainProjectile']); }
    static GetSummonedcharacters() { return SkillsParser.Data.map(row => row['SummonedCharacters']); }
    static GetOverchargedsummonedcharacters() { return SkillsParser.Data.map(row => row['OverchargedSummonedCharacters']); }
    static GetAreaeffectobject() { return SkillsParser.Data.map(row => row['AreaEffectObject']); }
    static GetAreaeffectobject2() { return SkillsParser.Data.map(row => row['AreaEffectObject2']); }
    static GetAreaeffect2atendofcharge() { return SkillsParser.Data.map(row => row['AreaEffect2AtEndOfCharge']); }
    static GetOverchargedareaeffectobject() { return SkillsParser.Data.map(row => row['OverchargedAreaEffectObject']); }
    static GetOverchargedareaeffectobject2() { return SkillsParser.Data.map(row => row['OverchargedAreaEffectObject2']); }
    static GetAreaeffectfollowtype() { return SkillsParser.Data.map(row => row['AreaEffectFollowType']); }
    static GetConsumableshieldvalue() { return SkillsParser.Data.map(row => row['ConsumableShieldValue']); }
    static GetConsumableshieldticks() { return SkillsParser.Data.map(row => row['ConsumableShieldTicks']); }
    static GetSpawneditem() { return SkillsParser.Data.map(row => row['SpawnedItem']); }
    static GetOverchargedspawneditem() { return SkillsParser.Data.map(row => row['OverchargedSpawnedItem']); }
    static GetSpawnitemtriggertype() { return SkillsParser.Data.map(row => row['SpawnItemTriggerType']); }
    static GetButtonswf() { return SkillsParser.Data.map(row => row['ButtonSWF']); }
    static GetButtonexportname() { return SkillsParser.Data.map(row => row['ButtonExportName']); }
    static GetButtonexportnameblue() { return SkillsParser.Data.map(row => row['ButtonExportNameBlue']); }
    static GetAttackeffect() { return SkillsParser.Data.map(row => row['AttackEffect']); }
    static GetOverchargedattackeffect() { return SkillsParser.Data.map(row => row['OverchargedAttackEffect']); }
    static GetUseeffect() { return SkillsParser.Data.map(row => row['UseEffect']); }
    static GetOverchargeduseeffect() { return SkillsParser.Data.map(row => row['OverchargedUseEffect']); }
    static GetEndeffect() { return SkillsParser.Data.map(row => row['EndEffect']); }
    static GetOverchargedendeffect() { return SkillsParser.Data.map(row => row['OverchargedEndEffect']); }
    static GetLoopeffect() { return SkillsParser.Data.map(row => row['LoopEffect']); }
    static GetLoopeffect2() { return SkillsParser.Data.map(row => row['LoopEffect2']); }
    static GetOverchargedloopeffect() { return SkillsParser.Data.map(row => row['OverchargedLoopEffect']); }
    static GetOverchargedloopeffect2() { return SkillsParser.Data.map(row => row['OverchargedLoopEffect2']); }
    static GetOverridemusicwhenequipped() { return SkillsParser.Data.map(row => row['OverrideMusicWhenEquipped']); }
    static GetChargemovesound() { return SkillsParser.Data.map(row => row['ChargeMoveSound']); }
    static GetMultishot() { return SkillsParser.Data.map(row => row['MultiShot']); }
    static GetSkillchangetype() { return SkillsParser.Data.map(row => row['SkillChangeType']); }
    static GetSecondaryskill() { return SkillsParser.Data.map(row => row['SecondarySkill']); }
    static GetSecondaryskill2() { return SkillsParser.Data.map(row => row['SecondarySkill2']); }
    static GetSecondaryskill3() { return SkillsParser.Data.map(row => row['SecondarySkill3']); }
    static GetSecondaryskill4() { return SkillsParser.Data.map(row => row['SecondarySkill4']); }
    static GetShowtimerbar() { return SkillsParser.Data.map(row => row['ShowTimerBar']); }
    static GetChargedshotcount() { return SkillsParser.Data.map(row => row['ChargedShotCount']); }
    static GetDamagemodifier() { return SkillsParser.Data.map(row => row['DamageModifier']); }
    static GetHoldtoshoot() { return SkillsParser.Data.map(row => row['HoldToShoot']); }
    static GetUsableinshadowrealm() { return SkillsParser.Data.map(row => row['UsableInShadowRealm']); }
    static GetHealselfonactivationtype() { return SkillsParser.Data.map(row => row['HealSelfOnActivationType']); }
    static GetHealselfonactivationpower() { return SkillsParser.Data.map(row => row['HealSelfOnActivationPower']); }
    static GetLowhealthspeeduppercent() { return SkillsParser.Data.map(row => row['LowHealthSpeedupPercent']); }
    static GetActivationselfstatuseffects() { return SkillsParser.Data.map(row => row['ActivationSelfStatusEffects']); }
    static GetActivationselfstatuseffectsovercharged() { return SkillsParser.Data.map(row => row['ActivationSelfStatusEffectsOvercharged']); }
    static GetOnchargehitstatuseffect() { return SkillsParser.Data.map(row => row['OnChargeHitStatusEffect']); }
    static GetOnchargehitstatuseffectovercharged() { return SkillsParser.Data.map(row => row['OnChargeHitStatusEffectOvercharged']); }
    static GetInterrupttype() { return SkillsParser.Data.map(row => row['InterruptType']); }
    static GetTid() { return SkillsParser.Data.map(row => row['TID']); }
    static GetDesc() { return SkillsParser.Data.map(row => row['Desc']); }
    static GetBooleanattributes() { return SkillsParser.Data.map(row => row['BooleanAttributes']); }
    static GetCustomstring() { return SkillsParser.Data.map(row => row['CustomString']); }
    static GetCustomstring2() { return SkillsParser.Data.map(row => row['CustomString2']); }
    static GetCustomvalue() { return SkillsParser.Data.map(row => row['CustomValue']); }
    static GetCustomvalue2() { return SkillsParser.Data.map(row => row['CustomValue2']); }
    static GetBotusagehint() { return SkillsParser.Data.map(row => row['BotUsageHint']); }
    static GetForcewalkanim() { return SkillsParser.Data.map(row => row['ForceWalkAnim']); }
}

export default SkillsParser;
